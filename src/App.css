@font-face {
  font-family: 'Pokemon';
  src: url('/src/assets/pokemon-red-blue-green-yellow-edition-font.ttf') format('truetype');
}

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
  font-family: 'Pokemon', monospace;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.blockset-display {
  margin: 20px;
  padding: 10px;
  border: 1px solid #ccc;
  overflow: auto;
}

.blockset-display canvas {
  image-rendering: pixelated;
}

.blockset-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 20px;
  padding: 10px;
}

.block {
  border: 1px solid #ddd;
  padding: 10px;
  background: #f5f5f5;
}

.block-label {
  text-align: center;
  margin-bottom: 5px;
  font-weight: bold;
  color: #666;
}

.block-tiles {
  background: white;
  padding: 5px;
  border: 1px solid #eee;
}

.block-row {
  display: flex;
  justify-content: center;
}

.block-cell {
  padding: 2px 4px;
  margin: 1px;
  background-color: #f0f0f0;
  border: 1px solid #ddd;
  font-family: 'Pokemon', monospace;
  font-size: 12px;
  min-width: 20px;
  text-align: center;
}

.map-display {
  margin: 20px;
  overflow: auto;
  max-height: 80vh;
  border: 10px solid #851313;
  padding: 0px;
  background: #f0f0f0;
}

.tile-grid {
  display: inline-block; /* Keep the grid contained to its content */
  background: #fff;
  padding: 10px;
  box-shadow: 0 0 5px rgba(0,0,0,0.1);
}

.tile-row {
  display: flex;
  height: 16px; /* This should match tileSize * displayScale */
}

.tile-canvas {
  display: block; /* Remove any extra space around canvas */
  image-rendering: pixelated; /* For crisp pixel art */
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
}

.selector-group {
  margin: 10px 0;
}

.map-info {
  background-color: #2d27a4;
  padding: 10px;
  margin: 10px 0;
  border-radius: 4px;
  border: 1px solid #ddd;
}

.map-info p {
  margin: 5px 0;
  font-family: 'Pokemon', monospace;
}

.required-files {
  margin: 5px 0;
  padding-left: 20px;
  font-family: 'Pokemon', monospace;
  color: #666;
}

.required-files li {
  margin: 2px 0;
}

.main-view {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  #root {
    padding: 1rem;
  }
  
  /* Stack the controls and canvases vertically */
  .image-selector, .preview-palette-container, .main-view {
    width: 100%;
  }
  
  /* Make interactive controls larger for touch input */
  select, button {
    font-size: 1.1rem;
    padding: 0.8em 1.5em;
  }
  
  /* Scale down the canvases to fit within the viewport nicely */
  .tileset-display canvas,
  .map-display canvas,
  .preview-palette-container canvas {
    width: 100%;
    max-width: 340px; /* Example value: adjust based on actual available width */
    height: auto;
  }
  
  /* If the canvases are side-by-side on desktop, force them into a single column on mobile */
  .map-display {
    margin: 10px auto;
  }
  
  /* Adjust map info styling for readability */
  .map-info {
    padding: 8px;
    font-size: 0.9rem;
  }
}

.textbox {
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  max-width: 500px;
  width: 90%; /* responsive width */
  height: 150px;  /* keep this fixed height */
  overflow: hidden; /* ensure the border doesn't get affected by scroll */
  box-sizing: border-box;

  /* set up the border so that its image uses our nine-slice image */
  border-style: solid;
  border-width: 12px 10px 12px 10px; /* top/right/bottom/left */
  border-image-source: url('src/assets/textbox.png');
  /* The image is sliced 18px in from all sides; the "fill" keyword tells the center to be used as the background */
  border-image-slice: 18 fill;
  /* 
    Use border-image-width to adjust how the drawn border relates to our border-width.
    Here the multiplier for top and bottom is 1.5 (12×1.5 = 18) 
    and for left and right is 1.8 (10×1.8 = 18),
    ensuring the fixed (non‑stretched) corner pieces come out as 18×18.
  */
  border-image-width: 1.5 1.8 1.5 1.8;
  /* Use stretch (or round if you prefer repeating the edge sections) */
  border-image-repeat: stretch;
  
  /* background-color: white; /* the textbox middle is white */
  padding: 10px; /* adjust to control inner spacing */
  margin: 10px;
  z-index: 10000;
  image-rendering: pixelated; /* keep the pixel art crisp */
}

.textbox-content {
  margin-top: -8px;
  text-align: left;
  font-family: 'Pokemon', monospace;
  font-size: 24px;
  color: black;
  /* Add these new properties */
  max-height: 120px; /* slightly less than textbox height to account for padding */
  overflow-y: auto; /* enables vertical scrolling */
  padding-right: 10px; /* gives space for the scrollbar */
}